#!/bin/bash

function prepare_template(){
	cd $path
	echo "step prepare template"
	rm -rf ./ncl_temp 2&> /dev/null
	cp -r $1 ./ncl_temp
	cd  ./ncl_temp

	if [[ -f ./.templates ]]; then
		for i in $(cat ../.templates);do
			find ./ -iname "$i" -exec rm -rf {} \;
		done
	fi
}

function split_host(){
	cd $path
	# create  split for  scan file if  doesn t exist
	if [[ ! $(find ./ -iname "host_*") ]]; then
		split -l $2 $1  host_
	fi
}

function scan(){
	cd $path
	echo "step 2 : scan"
	#lanch the scan 
	for file in $(ls host_* );do
		nuclei -l $file  -t ./ncl_temp -c $2   -stats -timeout 5  -severity $1  -silent| anew $3 |notify -silent
		rm -rf $file
	done
}

function update_template_file(){
	echo "step3 : update .template file"
	#get the templates that is used 
	cd ./ncl_temp && find ./ -iname "*.yaml"  |grep -r  "$4" |cut -d ":" -f 1 | rev | cut -d'/' -f1 | rev   >> ../.templates && cd -
	cat .templates |sort -uo .templates
	rm -rf ./ncl_temp 
}

path=pwd
urls=""
severity=""
templates="critical,high,medium,low"
output="nuclie_split"
line_nbr=500
occurence=100

while getopts ":l:s:o:t:n:c:" OPTION

	do
			case $OPTION in
					l)
							urls="$OPTARG" 
							;;
					s)
							severity="$OPTARG"
							;;
					t)
							templates="$OPTARG"
							;;
					o)
							output="$OPTARG"
							;;
					n)
							line_nbr="$OPTARG"
							;;
					c)
							occurence="$OPTARG"
							;;

					:)
							help
							exit 1
							;;
					\?)
							help
							exit 1
							;;

			esac
	done



if [[ $template == "" || $urls == "" ]];then
	exit ;
else 
	prepare_template $template
	split_host $urls  $line_nbr
	scan $occurence $severity $output
	update_template_file
fi







